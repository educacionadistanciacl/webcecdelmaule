---
// AreasContainer.astro
import CursoCard from "./CursoCard.astro";
import Btn from "./Btn.astro";
import Search from "./Search.astro";

import { slugReplace } from "../func/slugURL";
import { prepararCursos } from "../func/prepararCursos";
import { tipoCursoColores, ajustarTipoCurso} from "../func/AsignarColorTipoCursos";


const areas = Astro.props.areas;  // Se espera que se le pase un array de áreas (cursosPorArea)

---

<div class="areas-container">
  <div class="search-container">
    <Search id="area-search"/>
  </div>

  <div class="buttons-container">
    {
      Object.entries(tipoCursoColores).map(([tipo, color]) => (
        <Btn
          text={tipo.toUpperCase()}
          backgroundColor={color}
          fontSize="20px"
          id={tipo}
        />
      ))
    }
  </div>

  <div class="card-container">
    {
      Object.keys(areas).map((area) => (
        <CursoCard
          nombreCurso={area}
        />
      ))
    }
      
  </div>
</div>

<style>
  .areas-container {
    background-color: #062c5b;
    padding-top: 4%;
    padding: 40px;
  }

  .buttons-container {
    display: flex;
    justify-content: center;
    gap: 2%;
    margin-bottom: 4%;
  }

  .card-container {
    display: grid;
    grid-template-columns: repeat(3, minmax(250px, 1fr));
    gap: 20px;
    padding: 0 15% 5% 15%;
    
  }

  .search-container {
    display: flex;
    justify-content: center;
    margin-bottom: 2%;
  }

  .area-card {
    background-color: #FFF;
    color: #062C5B;
    padding: 20px;
    border-radius: 8px;
    text-align: center;
  }

  @media (max-width: 800px) {
    .buttons-container {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const areaCards = document.querySelectorAll(".curso-card");

    const searchInput = document.getElementById('area-search') as HTMLInputElement;

    // Evento para limpiar el campo de búsqueda cuando se hace clic fuera de él
    // document.addEventListener('click', function(event) {
    //   if (event.target !== searchInput) {
    //     searchInput.value = '';
    //   }
    // });

    searchInput?.addEventListener('input', function() {
      const query = this.value.toLowerCase();
      filterAreasByName(areaCards, query);
    });

    // Filtra las áreas en función del nombre
    function filterAreasByName(areaCards: any, query: string) {
      areaCards.forEach((card: any) => {
        const nombreArea = card.querySelector('p')?.textContent?.toLowerCase();
        if (nombreArea?.includes(query)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }
  });
</script>
