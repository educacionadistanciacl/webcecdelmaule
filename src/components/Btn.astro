---
// Definir las props que el componente `Btn` recibirá
interface BtnProps {
  text: string;
  color?: string;
  backgroundColor?: string;
  fontSize?: string;
  url?: string;
  additionalClasses?: string;
  id?: string;
  type?: string;
}

const { type, text, url, color = '#ffffff', backgroundColor = '#007bff', fontSize = '16px', additionalClasses = '', id = '' } = Astro.props as BtnProps;
---


<!-- Uso de lógica condicional en Astro para decidir el tipo de botón -->
{type === "Submit" ? (
  <button id={id} class={`baseButton hover ${additionalClasses}`} style={`color: ${color}; background-color: ${backgroundColor}; font-size: ${fontSize};`}>
    {text}
  </button>
) : (
  <a id={id} href={url} class={`baseButton hover ${additionalClasses}`} style={`color: ${color}; background-color: ${backgroundColor}; font-size: ${fontSize};`}>
    {text}
  </a>
)}


<style>
  .baseButton {
    padding: 10px 25px;
    border-radius: 20px;
    border: none;
    font-weight: 700;
    text-transform: uppercase;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
  }
</style>
