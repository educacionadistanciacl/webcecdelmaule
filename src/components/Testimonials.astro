---
// Importar estilos específicos si es necesario
import CurvedContainer from "../components/CurvedContainer.astro";

const testimonios = [
  {
    cliente: "Sugal Chile",
    testimonio:
      "Muy buena experiencia de capacitación. El equipo de CEC es atento, receptivo a comprender las necesidades de formación, y ofrece un acompañamiento amable para el diseño y desarrollo de programas rigurosos, con relatores de primer nivel.",
  },
  {
    cliente: "Rukan Service",
    testimonio:
      "Muy buena experiencia con CEC del Maule, acompañan en todo el proceso, los cursos son impartidos por profesionales altamente calificados. Excelente servicio.",
  },
  {
    cliente: "Constructora Malpo",
    testimonio:
      "Muy buena experiencia en capacitaciones. Excelente gestión y apoyo.",
    "Clínica UCM":
      "Los profesionales muy agradables, orientan todos los procesos. Curso de muy buen nivel.",
  },
];

// Serializa el objeto testimonios a JSON para poder usarlo en el script del frontend
//const testimoniosJSON = JSON.stringify(testimonios);
---

<!-- Componente Testimonials -->
<CurvedContainer>
  <div class="testimonials">
    <img
      src="/img/young-woman.webp"
      alt="Testimonio"
      class="testimonial-image"
    />
    <div class="testimonial-content" data-testimonios={JSON.stringify(testimonios)}>
      <h3 style="color:white;">Testimonios</h3>
      <div class="testimonial-dinamicos">
        <p id="testimonial-text">{testimonios[0].testimonio}</p>
        <p id="testimonial-cliente">{testimonios[0].cliente}</p>
      </div>
      <div class="testimonial-logo">
        <p>CON EL SELLO</p>
        <img src="/img/ucm.webp" alt="Logo UCM" />
      </div>
    </div>
  </div>
</CurvedContainer>

<style>
  /* Estilos para el contenedor .Testimonials */
  .testimonials {
    display: flex;
    flex-direction: column; /* Apila los elementos verticalmente */
    justify-content: flex-end; /* Alinea los elementos al final del contenedor */
    height: 100%; /* Ocupa todo el alto disponible de .content-area */
    margin-top: auto; /* Empuja todo el contenido hacia abajo */
    padding: 0 20px 20px 20px; /* Añade padding excepto en la parte superior */
  }

  /* Ajustes para la imagen del testimonio */
  .testimonial-image {
    position: absolute; /* Posicionamiento absoluto dentro del contenedor */
    bottom: 0; /* Alinea la imagen al final del contenedor */
    left: 15%; /* Alinea la imagen a la izquierda */
    max-width: 27%; /* Control del ancho de la imagen */
    height: auto; /* Altura automática para mantener la proporción */
    max-height: 340px; /* Establece un alto máximo */
  }

  /* Ajustes para el contenido del testimonio */
  .testimonial-content {
    position: absolute;
    justify-content: center; /* Centra el contenido verticalmente */
    left: 60%; /* Posiciona al centro horizontal */
    transform: translateX(-50%); /* Centra exactamente en el medio */
    top: 20%; /* Alinea el contenido en la parte superior */
    width: 50%; /* Controla el ancho del contenido */
    padding: 4% 10%; /* Reduce el padding lateral para más compactación */
    box-sizing: border-box; /* Incluye el padding en el cálculo del ancho */
    height: 60%; /* Ajusta la altura según necesidad */
    color: var(--color-secundario);
    text-align: center; /* Centra el texto horizontalmente */
  }

  .testimonial-content h3 {
    text-transform: uppercase;
  }

  #testimonial-cliente{
    font-weight: bold;
  }

  .testimonial-logo {
    position: absolute;
    left: 50%; /* Centra horizontalmente */
    transform: translateX(-50%); /* Asegura centrado preciso */
    bottom: -25%; /* Alinea el logo en la parte inferior */
    width: auto; /* Ancho automático o definido si es necesario */
  }

  .testimonial-logo img {
    width: 50%; /* Reduce el ancho del logo */
    height: auto; /* Mantiene la proporción del logo al cambiar el ancho */
  }

  @keyframes fadeOutIn {
      0% {
        opacity: 1;
      }
      50% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    .testimonial-content p {
      transition: opacity 1s ease-in-out;
    }

    .fade-out-in {
      animation: fadeOutIn 2s ease-in-out;
    }

  @media (min-width: 1500px) {
    .testimonial-content {
      padding: 4% 15%; /* Reduce el padding lateral para más compactación */
    }
  }

  @media (max-width: 912px) {
    .testimonial-image {
      display: none; /* Oculta la imagen del testimonio */
    }

    .testimonial-content {
      left: 50%; /* Asegura que el contenido esté centrado horizontalmente */
      width: 80%; /* Ajusta el ancho del contenido para que no sea demasiado ancho */
      transform: translateX(-50%); /* Centra exactamente en el medio */
      top: 50%; /* Centra verticalmente */
      transform: translate(-50%, -50%); /* Ajuste para centrar perfectamente */
    }

    .testimonial-logo {
      bottom: -20%; /* Ajusta la posición del logo para estar más cerca del texto */
    }
  }

  @media (max-width: 530px) {

  }
</style>
<script>
  // Obtén las políticas del atributo data
  const container = document.querySelector(".testimonial-content");
  let dataPoliticas;
  let testimonios: any;
  if (container) {
    dataPoliticas = container.getAttribute("data-testimonios");
  }

  if (dataPoliticas) {
    testimonios = JSON.parse(dataPoliticas);
  }

  let currentIndex = 0;

  if (testimonios) {
    function changePolicy() {
      const testimonialText = document.getElementById("testimonial-text");
      const testimonialCliente = document.getElementById("testimonial-cliente");
      if (testimonialText && testimonialCliente) {

        testimonialText.classList.remove("fade-out-in"); // Remueve la clase antes de agregarla
        void testimonialText.offsetWidth; // Fuerza un reflow para reiniciar la animación
        testimonialText.classList.add("fade-out-in"); // Añade la clase de animación

        testimonialCliente.classList.remove("fade-out-in"); // Remueve la clase antes de agregarla
        void testimonialCliente.offsetWidth; // Fuerza un reflow para reiniciar la animación
        testimonialCliente.classList.add("fade-out-in"); // Añade la clase de animación

        setTimeout(() => {
          testimonialText.innerText = testimonios[currentIndex].testimonio;
          testimonialCliente.innerText = testimonios[currentIndex].cliente;
        }, 1000); // Cambia el texto cuando la animación esté a mitad (después de 1s)

        currentIndex = (currentIndex + 1) % testimonios.length;
      }
    }

    setInterval(changePolicy, 5000);
  }
</script>
